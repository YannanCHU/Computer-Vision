% Auto-generated by cameraCalibrator app on 15-Feb-2022
%-------------------------------------------------------
% clc;
close all;

% Define images to process
imageFileNames = {'.\images3\FD\1.jpg',...
    '.\images3\FD\2.jpg',...
    '.\images3\FD\3.jpg',...
    '.\images3\FD\4.jpg',...
    '.\images3\FD\5.jpg',...
    '.\images3\FD\6.jpg',...
    '.\images3\FD\7.jpg',...
    '.\images3\FD\8.jpg',...
    '.\images3\FD\9.jpg',...
    '.\images3\FD\10.jpg'
    };

for index = 1:length(imageFileNames)
    im = imread(imageFileNames{index});
    images(:,:,:,index) = imrotate(im,-90);
    %figure(); imshow(images(:,:,:,index));
end

% Detect calibration pattern in images
detector = vision.calibration.monocular.CheckerboardDetector();
[imagePoints, imagesUsed] = detectPatternPoints(detector, images);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imrotate(imread(imageFileNames{1}), -90);
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates for the planar pattern keypoints
squareSize = 30;  % in units of 'millimeters'
worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', true, 'EstimateTangentialDistortion', true, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortImage(originalImage, cameraParams);
figure(); imshow(undistortedImage); title("Undistorted image");

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')

%%
% figure(); 
% imshow(cat(2, undistortedImage_2coef, undistortedImage)); 
% title("Undistorted images when 2 (left) and 3 (right) coefficients are used to model radial distortion");

undistortedImages = cell(10,1);
for index = 1:length(imageFileNames)
    undistortedImages{index,1} = undistortImage(images(:,:,:,index), cameraParams);
end

im1 = cat(2, undistortedImages{1}, undistortedImages{2}, ...
    undistortedImages{3}, undistortedImages{4});
im2 = cat(2, undistortedImages{5}, undistortedImages{6}, ...
    undistortedImages{7}, undistortedImages{8});
im3 = cat(2, undistortedImages{9}, undistortedImages{10}, ...
    255*ones(mrows, ncols, 3), 255*ones(mrows, ncols, 3));

figure(); imshow(cat(1, im1, im2, im3)); 
title("Undistorted images when 2 coefficients are used to model radial distortion");